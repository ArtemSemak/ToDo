{"version":3,"sources":["images/premium-icon-trash-can-4914888.png","TDCard.js","TDlLst.js","Pagination.js","InputToDo.js","Filters.js","Modal.js","App.js","reportWebVitals.js","index.js"],"names":["TDCard","todo","onChange","deleteTodo","editing","useState","edit","setEdit","value","setValue","classes","done","push","className","uuid","name","checked","autoFocus","onBlur","onPressEnter","event","preventDefault","trim","submitHandler","onKeyDown","key","escHandler","target","placeholder","onClick","join","createdAt","slice","title","icon","DeleteOutlined","size","TDList","sortedTodos","doneTodo","removeTodo","length","map","NewPagination","todosLength","todosPerPage","pageClick","Math","ceil","page","defaultPageSize","defaultCurrent","total","Search","Input","InputToDo","addTodo","onSearch","type","enterButton","style","width","height","Filters","doneUndone","setDoneUnDone","setOrder","order","Group","e","Button","Modal","visible","onClose","content","stopPropagation","myID","process","url","App","todos","setTodos","currentPage","setCurrentPage","doneUnDone","show","setShow","errorMsg","setErrorMsg","todosForCurrentPage","id","a","filter","axios","delete","response","data","message","setTimeout","completed","patch","newTitle","post","getTodos","get","useEffect","Pagination","number","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44fbe093.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/premium-icon-trash-can-4914888.25b0789a.png\";","import './App.css';\r\nimport { useState } from 'react' \r\nimport trash from './images/premium-icon-trash-can-4914888.png'\r\nimport {  Input, Button, Checkbox } from 'antd'\r\nimport { DeleteOutlined } from '@ant-design/icons';\r\n\r\nfunction TDCard({ todo, onChange, deleteTodo, editing}) {\r\n  const [edit, setEdit] = useState(false)\r\n  const [value, setValue] = useState('')\r\n  const classes = ['titleToDo']\r\n  if (todo.done) {\r\n    classes.push('done')\r\n  }\r\n\r\n  function clickHandler() {\r\n    setEdit(true)\r\n  }\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault()\r\n    if (value.trim()) {\r\n      editing(todo.uuid, value, todo.done)\r\n      setEdit(false)\r\n  }\r\n  }\r\n\r\n  function escHandler(event) {\r\n    if (event.key === 'Escape') {\r\n      setEdit(false)\r\n    }\r\n  }\r\n    return (\r\n        <section className=\"td\">\r\n        <section >\r\n               <Checkbox className='checkBox' onChange={ () => onChange(todo.uuid, todo.done, todo.name) } checked={ todo.done } ></Checkbox>\r\n               {edit ? <Input className='inputForEdit' autoFocus onBlur={() => setEdit(false)} onPressEnter={event => submitHandler(event)} onKeyDown={ (event) => escHandler(event)} \r\n               value={value} onChange={event => setValue(event.target.value)} placeholder=\"I want to do...\" /> : \r\n               <button onClick={ clickHandler } className='qwe'><span  className={ classes.join(' ') }> { todo.name } </span></button>}\r\n        </section>\r\n        <section>\r\n          <label className=\"lbltext\"> { todo.createdAt.slice(0, 10) } </label>\r\n          <Button  className=\"trash\" title=\"Delete plan\" onClick={ () => {\r\n            deleteTodo(todo.uuid)\r\n            setEdit(false)}} icon={<DeleteOutlined />} size='small'/>\r\n      </section>\r\n    </section>\r\n    )\r\n}\r\n\r\n\r\nexport default TDCard","import './App.css';\r\nimport TDCard from './TDCard';\r\n\r\n\r\nfunction TDList({ sortedTodos, doneTodo, removeTodo, edit}) {\r\n    \r\n\r\n    return (\r\n        <main className=\"tds\">\r\n            { sortedTodos.length ?  sortedTodos.map( todo => {\r\n            return <TDCard editing={edit} todo={todo} onChange={doneTodo} deleteTodo={removeTodo}/>\r\n            }) : <p className=\"noTD\">You dont have ToDos</p>}\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default TDList","import './App.css';\nimport { Pagination } from 'antd';\n\n\n\nfunction NewPagination({ todosLength, todosPerPage, pageClick}) {   \n    const totalTodos = Math.ceil(todosLength / todosPerPage)\n    \n        if (totalTodos > 1) {\n            return (\n                    <section className='footer'>\n                            <Pagination onChange={(page) => pageClick(page)} defaultPageSize={todosPerPage} defaultCurrent={1} total={todosLength} />\n                    </section> \n                    \n        ) } else {\n            return <span></span>\n        }\n    } \n\n\nexport default NewPagination","import 'antd/dist/antd.css';\nimport './App.css'\nimport { useState } from 'react'\nimport {  Input } from 'antd'\n\nconst { Search } = Input;\nfunction InputToDo({ addTodo }) {\n    const [value, setValue] = useState('')\n    \n    return (\n        <section>\n            <Search onSearch={() => {\n                                addTodo(value)\n                                setValue('')\n              }} autoFocus type=\"text\" value={value}  onChange={event => setValue(event.target.value)} \n              enterButton='Add' placeholder=\"I want to do...\" style={{ width: 560, height: 40}} title=\"Write your plan here\"/>  \n        </section>\n    )\n}\n\n\nexport default InputToDo","\nimport './App.css';\nimport {  Radio } from 'antd';\nimport { ArrowUpOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\n\n\n\n\nfunction Filters({ doneUndone, setDoneUnDone, setOrder, order }) {\n\n    function handleDoneChange(e) {\n        setDoneUnDone(e.target.value)\n    }\n\n    function handleOrderChange(e) {\n        setOrder(e.target.value)\n    }\n\n\n    return (\n        <section className=\"control\">\n        <Radio.Group value={doneUndone} onChange={handleDoneChange}>\n          <Radio.Button value=\"\">All</Radio.Button>\n          <Radio.Button value=\"done\">Done</Radio.Button>\n          <Radio.Button value=\"undone\">Undone</Radio.Button>\n        </Radio.Group>\n        <Radio.Group value={order} onChange={handleOrderChange}>\n          <Radio.Button value=\"asc\">Asc</Radio.Button>\n          <Radio.Button value=\"desc\">Desc</Radio.Button>\n        </Radio.Group>\n        </section>\n    )\n}\n\n\nexport default Filters","import './App.css';\n function Modal({ visible, onClose, content }) {\n    \n\n    if (!visible) return null\n     return (\n        <div className='modal-window' onClick={onClose}>\n        <div className='modal-dialog' onClick={e => e.stopPropagation()}>\n          <div className='modal-header'>\n            <h3 className='modal-title'>Oops!</h3>\n            \n              \n            \n          </div>\n          <div className='modal-body'>\n            <div className='modal-content'>{content}</div>\n          </div>\n          \n        </div>\n      </div>\n     )\n }\n\n\n export default Modal","import './App.css';\r\nimport axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport TDList from './TDlLst'\r\nimport Pagination from './Pagination'\r\nimport InputToDo from './InputToDo'\r\nimport Filters from './Filters'\r\nimport Modal from './Modal';\r\n\r\n\r\nconst myID = process.env[\"REACT_APP_ID\"]\r\nconst url = process.env[\"REACT_APP_URL\"]\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [doneUnDone, setDoneUnDone] = useState('')\r\n  const [order, setOrder] = useState('desc')\r\n  const [show, setShow] = useState(false)\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const todosPerPage = 5\r\n  const todosForCurrentPage = todos.slice(currentPage * todosPerPage - todosPerPage, currentPage * todosPerPage )\r\n\r\n  function onClose() {\r\n    setShow(false)\r\n  }\r\n\r\n  async function removeTodo(id) {\r\n    try {\r\n      setTodos(todos.filter(todo => todo.uuid !== id))\r\n      await axios.delete(`${url}/${myID}/${id}`)\r\n      \r\n      if (todosForCurrentPage.length - 1 === 0 && currentPage != 1) {\r\n        setCurrentPage(currentPage - 1)\r\n      }} catch(err) {\r\n        setErrorMsg(err.response.data.message)\r\n        setShow(true)\r\n        setTimeout(() => setShow(false), 3000)\r\n        }\r\n  }\r\n\r\n\r\nasync function doneTodo(id, completed, title) {\r\n  try {\r\n    await axios.patch(`${url}/${myID}/${id}`, {\r\n        name: title,\r\n        done: !completed\r\n        })\r\n        setTodos(\r\n          todos.map( todo => {\r\n            if (todo.uuid === id) {\r\n              todo.done = !todo.done\r\n            }\r\n            return todo\r\n          }\r\n          )\r\n        ) } catch(err) {\r\n          setErrorMsg(err.response.data.message)\r\n          setShow(true)\r\n          setTimeout(() => setShow(false), 3000)\r\n          }\r\n    \r\n    \r\n  }\r\n  \r\n  async function editToDo(id, newTitle, completed) {\r\n    try {\r\n      await axios.patch(`${url}/${myID}/${id}`, {\r\n        name: newTitle,\r\n        done: completed\r\n        })\r\n      setTodos( \r\n        todos.map( todo =>{\r\n          if (todo.uuid === id) {\r\n            todo.name = newTitle\r\n          } return todo}\r\n      ))} catch(err) {\r\n        setErrorMsg(err.response.data.message)\r\n        setShow(true)\r\n        setTimeout(() => setShow(false), 3000)\r\n        }\r\n    }\r\n\r\n  async function addTodo(value) {\r\n      try {\r\n        setDoneUnDone('')\r\n        await axios.post(`${url}/${myID}`, {\r\n          name: value,\r\n          done: false\r\n      })\r\n        getTodos()\r\n      } catch(err) {\r\n        setErrorMsg(err.response.data.message)\r\n        setShow(true)\r\n        setTimeout(() => setShow(false), 3000)\r\n    }\r\n    }\r\n    \r\n    function hanlePageClick(number) { \r\n      setCurrentPage(number)\r\n    }\r\n\r\n    async function getTodos() {\r\n      try {\r\n        const data = await axios.get(`${url}s/${myID}?order=${order}&filterBy=${doneUnDone}`)\r\n        setTodos(data.data)\r\n      } catch(err) {\r\n        setErrorMsg(err.response.data.message)\r\n        setShow(true)\r\n        setTimeout(setShow(false), 3000)\r\n        }\r\n      \r\n    }\r\n\r\n    useEffect(() => {getTodos()}, [])\r\n\r\n    useEffect(() => {\r\n      setCurrentPage(1)\r\n      getTodos()\r\n      \r\n    }, [doneUnDone, order])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n    <body>\r\n      <header>\r\n        <section>\r\n            <p className=\"title\">ToDo</p>\r\n        </section>\r\n          <InputToDo addTodo={addTodo}/>\r\n          <Filters doneUndone={doneUnDone} setDoneUnDone={setDoneUnDone} setOrder={setOrder} order={order} />\r\n    </header>\r\n\r\n    <TDList edit={editToDo} sortedTodos={todosForCurrentPage} doneTodo={doneTodo} removeTodo={removeTodo}/>\r\n    \r\n    \r\n\r\n    <footer>\r\n    \r\n      <Pagination  todosLength={todos.length} todosPerPage={todosPerPage} pageClick={hanlePageClick} />  \r\n    \r\n    </footer>\r\n    <Modal visible={show} onClose={onClose} content={errorMsg} />\r\n    </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}